name: CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        gm: [flopy, standalone]
        repo: [executables, modflow6, modflow6-nightly-build]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          pip install -r test/requirements.txt
      - name: Install FloPy
        if: matrix.gm == 'flopy'
        run: |
          pip install git+https://github.com/modflowpy/flopy.git
      - name: Set bin directory
        if: runner.os != 'Windows'
        run: |
          bindir="$HOME/.local/bin"
          echo "TEST_BINDIR=$bindir" >> $GITHUB_ENV
      - name: Set bin directory
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $bindir = "C:\Users\runneradmin\.local\bin"
          echo "TEST_BINDIR=$bindir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install executables
        id: install_executables
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.TEST_BINDIR }}
          repo: ${{ matrix.repo }}
      - name: Test installation
        run: |
          script_path="$RUNNER_TEMP/get_modflow.py"
          bin_path="$HOME/.local/bin"

          if [ ${{ matrix.gm }} == "standalone" ] && [ ${{ steps.install_executables.outputs.cache-hit }} != "true" ]
          then
            if [ -f "$script_path" ]
            then
              echo "get-modflow script exists: $script_path"
            else
              echo "get-modflow script missing: $script_path"
              exit 1
            fi
          fi

          python test/test_exes.py $bin_path ${{ matrix.repo }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}